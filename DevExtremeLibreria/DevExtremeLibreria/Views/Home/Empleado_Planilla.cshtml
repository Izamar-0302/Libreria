@{
    ViewData["Title"] = "Empleado_Planilla";
}

<div class="d-flex justify-content-center align-items-center mb-4">
    <div class="text-center">
        <h1 class="display-4">
            <i class="fas fa-user-tie"></i> Empleado Planilla
        </h1>
        <hr class="w-50 mx-auto" />
    </div>
</div>

@(Html.DevExtreme().DataGrid<DevExtremeLibreria.Models.Empleado_planilla>()
    .DataSource(ds => ds.WebApi()
        .Controller("Empleado_Planilla")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("Id")
    )
    .RemoteOperations(true)
.ShowBorders(true)
    .RowAlternationEnabled(true)
    .HoverStateEnabled(true)
    .HeaderFilter(headerFilter => headerFilter.Visible(true))
    .FilterRow(filterRow => filterRow.Visible(true))
    .SearchPanel(searchPanel => searchPanel.Visible(true))
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new[] { 5, 10, 20 });
        pager.ShowInfo(true);
    })
    .Columns(columns => {

        columns.AddFor(m => m.Id);

        columns.AddFor(m => m.EmpleadoId).Caption("Id del empleado").Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Empleado").LoadAction("Get").Key("EmpleadoId"))
            .ValueExpr("EmpleadoId")
            .DisplayExpr("Nombre")
        );

        columns.AddFor(m => m.BonificacionesId)
        .Caption("Id de Bonificaciones")
        
        .Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Bonificaciones").LoadAction("Get").Key("BonificacionesId"))
            .ValueExpr("BonificacionesId")
            .DisplayExpr("Tipobonificacion")
        );

        columns.AddFor(m => m.Anticipo)
        .Caption("Antipo");

        columns.AddFor(m => m.DeduccionesId)
        .Caption("Id Deducciones")
        
        .Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Deducciones").LoadAction("Get").Key("DeduccionesId"))
            .ValueExpr("DeduccionesId")
            .DisplayExpr("TipoDeduccion")
        );

        columns.AddFor(m => m.Sueldoneto)
         .Caption("Sueldo Neto");
    })
   .Editing(e => e
    .Mode(GridEditMode.Popup)
    .AllowAdding(true)
    .AllowUpdating(true)
    .AllowDeleting(true)
     .Popup(p => p
        .Title("Gestión de Planilla de empleados")
        .ShowTitle(true)
        .Width(700)
        .Height(500)
    )
     .Form(f => f
            .ColCount(2)
            .Items(items =>
            {
                items.AddSimpleFor(m => m.EmpleadoId);
                items.AddSimpleFor(m => m.BonificacionesId);
                items.AddSimpleFor(m => m.Anticipo);
                items.AddSimpleFor(m => m.DeduccionesId);
                items.AddSimpleFor(m => m.Sueldoneto);
            })
        )
  .Texts(t => t
        .ConfirmDeleteMessage("¿Estás seguro de que deseas eliminar este registro?")
        .SaveRowChanges("Guardar")
        .CancelRowChanges("Cancelar")
        .AddRow("Agregar")
        .EditRow("Editar")
        .DeleteRow("Eliminar")
        )
      )
    )
