@{
    ViewData["Title"] = "Libro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-center align-items-center mb-4">
    <div class="text-center">
        <h1 class="display-4">
            <i class="fas fa-book"></i> Libro
        </h1>
        <hr class="w-50 mx-auto" />
    </div>
</div>


@(Html.DevExtreme().DataGrid<DevExtremeLibreria.Models.Libro>
    ()
    .DataSource(ds => ds.WebApi()
    .Controller("Libro")
    .LoadAction("Get")
    .InsertAction("Post")
    .UpdateAction("Put")
    .DeleteAction("Delete")
    .Key("LibroId")
    )
    .RemoteOperations(true)
    .Paging(p => p.PageSize(10))
.FilterRow(f => f.Visible(true))
.HeaderFilter(f => f.Visible(true))
.SearchPanel(f => f.Visible(true))
.ShowBorders(true)                        // Muestra bordes entre celdas
.RowAlternationEnabled(true)
.ColumnAutoWidth(true)
    .Columns(columns => {

        columns.AddFor(m => m.LibroId)
        .Caption("Id de Libro");

        columns.AddFor(m => m.Titulo)
        .Caption("Título");

        columns.AddFor(m => m.AutorId).Caption("Id de Autor").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("Autor").LoadAction("GetAutores").Key("AutorId"))
        .ValueExpr("AutorId")
        .DisplayExpr("Nombre")
        );

        columns.AddFor(m => m.EditorialId).Caption("Id de Editorial").Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("Editorial").LoadAction("Get").Key("Editorialid"))
        .ValueExpr("EditorialId")
        .DisplayExpr("Nombre")
        );


        columns.AddFor(m => m.Aniopublicacion)
        .Caption("Año Publicación");

        columns.AddFor(m => m.Precio)
        .Caption("Precio");

        columns.AddFor(m => m.Genero)
        .Caption("Género");

        columns.AddFor(m => m.Cantidad)
        .Caption("Cantidad");

        columns.AddFor(m => m.UbicacionId).Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("Ubicacion").LoadAction("GetUbicaciones").Key("UbicacionId"))
        .ValueExpr("UbicacionId")
        .DisplayExpr("UbicacionId")
        );

        columns.AddFor(m => m.ProveedorId).Lookup(lookup => lookup
        .DataSource(ds => ds.WebApi().Controller("Proveedor").LoadAction("GetProveedores").Key("ProveedorId"))
        .ValueExpr("ProveedorId")
        .DisplayExpr("Nombreproveedor")
        );

    })
   .Editing(e => e
    .Mode(GridEditMode.Popup)
    .AllowAdding(true)
    .AllowUpdating(true)
    .AllowDeleting(true)
     .Popup(p => p
        .Title("Gestión de Libros")
        .ShowTitle(true)
        .Width(700)
        .Height(500)
    )
     .Form(f => f
            .ColCount(2)
            .Items(items =>
            {
                items.AddSimpleFor(m => m.Titulo);
                items.AddSimpleFor(m => m.AutorId);
                items.AddSimpleFor(m => m.EditorialId);
                items.AddSimpleFor(m => m.Aniopublicacion);
                items.AddSimpleFor(m => m.Precio);
                items.AddSimpleFor(m => m.Genero);
                items.AddSimpleFor(m => m.Cantidad);
                items.AddSimpleFor(m => m.UbicacionId);
                items.AddSimpleFor(m => m.ProveedorId);
            })
        )
  .Texts(t => t
        .ConfirmDeleteMessage("¿Estás seguro de que deseas eliminar este registro?")
        .SaveRowChanges("Guardar")
        .CancelRowChanges("Cancelar")
        .AddRow("Agregar")
        .EditRow("Editar")
        .DeleteRow("Eliminar")
        )
      )
    )
