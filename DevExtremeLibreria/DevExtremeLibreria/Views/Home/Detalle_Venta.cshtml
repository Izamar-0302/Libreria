@{
    ViewData["Title"] = "Detalle_Venta";
}

<h2>Detalle_Venta</h2>

@(Html.DevExtreme().DataGrid<DevExtremeLibreria.Models.Detalle_Venta>()
    .DataSource(ds => ds.WebApi()
        .Controller("Detalle_Venta")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("Id")
    )
    .RemoteOperations(true)
    .Paging(p => p.PageSize(10))
.FilterRow(f => f.Visible(true))
.HeaderFilter(f => f.Visible(true))
.SearchPanel(f => f.Visible(true))
    .Columns(columns => {

        columns.AddFor(m => m.Id);

        columns.AddFor(m => m.VentaId).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Venta").LoadAction("Get").Key("VentaId"))
            .ValueExpr("VentaId")
            .DisplayExpr("Descripcion")
        );

        columns.AddFor(m => m.LibroId).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Libro").LoadAction("Get").Key("LibroId"))
            .ValueExpr("LibroId")
            .DisplayExpr("Titulo")
        );

        columns.AddFor(m => m.Cantidad);

        columns.AddFor(m => m.Preciounitario);

        columns.AddFor(m => m.Subtotal);
    })
        .Editing(e => e
    .Mode(GridEditMode.Popup)
        .AllowAdding(true)
        .AllowUpdating(true)
        .AllowDeleting(true)
        .Texts(t => t
.ConfirmDeleteMessage("¿Estás seguro de que deseas eliminar este registro?")
.SaveRowChanges("Guardar")
.CancelRowChanges("Cancelar")
)
)
)

